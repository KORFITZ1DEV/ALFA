[
  {
    "Prog": "int x = 0;\nint y = 0;\n\nint length = 20;\nint animDuration = 4000;\nint delay = 2000;\nrect myRect1 = createRect(0, 0, length, length);\n\nmove(myRect1 , 200, 0, animDuration);\nwait(delay);\nmove(myRect1 , -200, 0, animDuration);",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": "int x1 = 0;\nint y1 = 0;\nint x2 = 100;\nint y2 = 140;\n\nint length = 100;\nint width = 200;\nint animDuration = 1000;\nint delay = 300;\nrect myrect1 = createRect(x1, y1, width, length);\nrect myrect2 = createRect(x2, y2, length, length);\n\nmove(myrect1, 200, 0, animDuration);\nwait(delay);\nmove(myrect2, 300, 0, animDuration);\nmove(myrect1, -200, 0, animDuration);\nwait(delay);\nmove(myrect2, -200, 0, animDuration);\n\nrect myrect3 = createRect(200, 150, 20, 20);\nmove(myrect3, 400, 0, 600);\n\nrect myrect4 = createRect(200, 350, 40, 30);\nmove(myrect4, 200, 0, 700);",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": "int x1 = 0;\nint y1 = 0;\n\nint length = 100;\nint width = 200;\nrect myrect1 = createRect(x1, y1, width, length);\n",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": "int x1 = 0;\nint y1 = 0;\n\nint length = 100;\nint width = 200;\nrect myrect1 = createRect(x1, y1, width, length);\n\nmove(myrect1, 200, 0, 3000);",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": "",
    "Comment": "",
    "exceptionType": ""
  },
  {
    "Prog": "#Two rects moving in parallel\n\nint len = 20;\nrect myRect1 = createRect(0,0,len,len);\nrect myRect2 = createRect(40,40,len,len);\n\nint offsetX = 100;\nint offsetY = 100;\nint duration = 1500;\n\nloop(int i from 1 .. 4) {\n    paral {\n        move(myRect1, offsetX, 0, duration);\n        move(myRect2, offsetX, 0, duration);\n    }\n    paral {\n        move(myRect1, 0, offsetY, duration);\n        move(myRect2, 0, offsetY, duration);\n    }\n    wait(200);\n    paral {\n        move(myRect1, -offsetX, 0, duration);\n        move(myRect2, -offsetX, 0, duration);\n    }\n    paral {\n        move(myRect1, 0, -offsetY, duration);\n        move(myRect2, 0, -offsetY, duration);\n    }\n}",
    "Comment": "",
    "exceptionType": ""
  },    
  {
    "Prog": "#Rect also moving in y-direction\n\nint len = 20;\nrect myRect1 = createRect(0,0,len,len);\n\nint offsetX = 100;\nint offsetY = 100;\nint duration = 1500;\n\nloop(int i from 1 .. 4) {\n    move(myRect1, offsetX, 0, duration);\n    move(myRect1, 0, offsetY, duration);\n    move(myRect1, -offsetX, 0, duration);\n    move(myRect1, 0, -offsetY, duration);\n}",
    "Comment": "",
    "exceptionType": ""
  },     
  {
    "Prog": "    int pos = 200;\n    \n    rect myRect1 = createRect(pos,pos,10,10);\n    rect myRect2 = createRect(pos+100,pos,10,10);\n    rect myRect3 = createRect(pos+300,pos,10,10);\n    rect myRect4 = createRect(pos+400,pos,10,10);\n    \n    int duration1 = 500;\n    int pushLength = 10;\n    int offSet = 50;\n    int fDuration = 100;\n    int loopduration1 = 500;\n    \n    loop(int i from 1 .. 10 ) {    \n        paral{\n            move(myRect1, 20,20, duration1);\n            move(myRect2, 20,20, duration1);\n            move(myRect3, 20,20, duration1);\n            move(myRect4, 20,20, duration1);\n        }\n        \n        loop(int j from 1 .. 2) {\n           paral{\n             move(myRect1,offSet ,0, loopduration1);\n             move(myRect2,offSet ,0, loopduration1);\n             move(myRect3,offSet ,0, loopduration1);\n             move(myRect4,offSet ,0, loopduration1);\n            }\n             paral{\n             move(myRect1,0 ,offSet, loopduration1);\n             move(myRect2,0 ,offSet, loopduration1);\n             move(myRect3,0 ,offSet, loopduration1);\n             move(myRect4,0 ,offSet, loopduration1);\n             }\n            \n            paral{\n             move(myRect1,-offSet ,0 ,loopduration1);\n             move(myRect2,-offSet ,0 ,loopduration1);\n             move(myRect3,-offSet ,0 ,loopduration1);\n             move(myRect4,-offSet ,0 ,loopduration1);\n            }\n            paral{\n             move(myRect1,0 ,-offSet, loopduration1);\n             move(myRect2,0 ,-offSet, loopduration1);\n             move(myRect3,0 ,-offSet, loopduration1);\n             move(myRect4,0 ,-offSet, loopduration1);\n            }\n        }\n    }\n        \n        move(myRect1,10*(-20), 10*(-20), fDuration);\n        move(myRect2, 10*(-20), 10*(-20), fDuration);\n        move(myRect3, 10*(-20),10*(-20), fDuration);\n        move(myRect4, 10*(-20), 10*(-20), fDuration);",
    "Comment": "",
    "exceptionType": ""
  },    
  {
    "Prog": " int pos = 20;\n \n rect myRect1 = createRect(pos,pos,10,10);\n rect myRect2 = createRect(pos,pos,10,10);\n rect myRect3 = createRect(pos,pos,10,10);\n rect myRect4 = createRect(pos,pos,10,10);\n rect myRect5 = createRect(pos,pos,10,10);\n rect myRect6 = createRect(pos,pos,10,10);\n rect myRect7 = createRect(pos,pos,10,10);\n rect myRect8 = createRect(pos,pos,10,10);\n rect myRect9 = createRect(pos,pos,10,10);\n rect myRect10 = createRect(pos,pos,10,10);\n rect myRect11 = createRect(pos,pos,10,10);\n rect myRect12 = createRect(pos,pos,10,10);\n rect myRect13 = createRect(pos,pos,10,10);\n rect myRect14 = createRect(pos,pos,10,10);\n rect myRect15 = createRect(pos,pos,10,10);\n rect myRect16 = createRect(pos,pos,10,10);\n rect myRect17 = createRect(pos,pos,10,10);\n rect myRect18 = createRect(pos,pos,10,10);\n rect myRect19 = createRect(pos,pos,10,10);\n rect myRect20 = createRect(pos,pos,10,10);\n rect myRect21 = createRect(pos,pos,10,10);\n rect myRect22 = createRect(pos,pos,10,10);\n \n int duration1 = 1000;\n int pushLength = 1;\n \n loop(int i from 1 .. 100 ) {\n \n     #move out\n     paral{\n         #leftside\n         move(myRect1, -pushLength, 0, duration1); \n         move(myRect2, -pushLength, 20, duration1);\n         move(myRect3, -pushLength, 40, duration1);\n         move(myRect4, -pushLength, 60, duration1);\n         move(myRect5, -pushLength, 80, duration1);\n         move(myRect6, -pushLength, 100, duration1);\n         #rightside\n          move(myRect7, pushLength, 0, duration1); \n          move(myRect8, pushLength, 20, duration1);\n          move(myRect9, pushLength, 40, duration1);\n          move(myRect10, pushLength, 60, duration1);\n          move(myRect11, pushLength, 80, duration1);\n          move(myRect12, pushLength, 100, duration1);\n        \n         #topside\n            move(myRect13, 0, 0, duration1); \n            move(myRect14, 20, -pushLength, duration1);\n            move(myRect15, 40, -pushLength, duration1);\n            move(myRect16, 60, -pushLength, duration1);\n            move(myRect17, 80, -pushLength, duration1);\n            move(myRect18, 100, -pushLength, duration1);\n        \n         #bottomside\n          move(myRect13, 0, 0, duration1); \n          move(myRect19, 20, pushLength, duration1);\n          move(myRect20, 40, pushLength, duration1);\n          move(myRect21, 60, pushLength, duration1);\n          move(myRect22, 80, pushLength, duration1);     \n   }\n  \n     \n     #move in\n    paral{ \n     }\n      \n }",
    "Comment": "",
    "exceptionType": ""
  },    
  {
    "Prog": " #Same rect moved in paral\n \n rect myRect1 = createRect(100,100,60,60);\n rect myRect2 = createRect(100,100,60,60);\n rect myRect3 = createRect(100,100,60,60);\n int offset = 50;\n int duration = 200;\n \n loop(int i from 1 .. 10 ) {\n     paral{\n         move(myRect1, offset, 0, duration);\n         move(myRect3, 0, offset, duration);\n     }\n     paral{\n               move(myRect1, 0, offset, duration);\n               move(myRect3, offset, 0, duration);\n     }\n     \n     if(i % 2 == 0) {\n             move(myRect2, 2*offset, 2*offset, duration);\n     }\n }\n \n loop(int j from 1 .. 10 ) {\n     paral{\n               move(myRect1, 0, -offset, duration);\n               move(myRect3, -offset, 0, duration);\n     }\n     paral{\n         move(myRect1, -offset, 0, duration);\n         move(myRect3, 0, -offset, duration);\n     }\n     \n     if(j % 2 == 0) {\n             move(myRect2, 2* (-offset), 2* (-offset), duration); \n     }\n }",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": "#Quad\nint len = 40;\nint xPos = 0;\nrect myRect1 = createRect(xPos,0,len,len);\nrect myRect2 = createRect(xPos,50,len,len);\n\nint offset1 = 500;\nint offset2 = 500;\nint duration = 500;\n\nloop (int i from 0 .. 20) {\n    paral {\n        move(myRect1, offset1/2, 0, duration);\n        move(myRect2, offset2, 0, duration);\n    }\n    paral {\n        move(myRect1, offset1/2, 0, duration);\n        move(myRect2, 0, offset2, duration);\n    }\n    paral {\n        move(myRect1, -offset1/2, 0, duration);\n        move(myRect2, -offset2, 0, duration);\n    }paral {\n        move(myRect1, -offset1/2, 0, duration);\n        move(myRect2, 0, -offset2, duration);\n    }\n}",
    "Comment": "",
    "exceptionType": ""
  },  
  {
    "Prog": " #Same rect moved in paral\n \n rect myRect1 = createRect(100,100,60,60);\n rect myRect2 = createRect(100,100,60,60);\n rect myRect3 = createRect(100,100,60,60);\n int offset = 50;\n int duration = 200;\n \n loop(int i from 1 .. 10 ) {\n     paral{\n         move(myRect1, offset, 0, duration);\n         move(myRect3, 0, offset, duration);\n     }\n     paral{\n               move(myRect1, 0, offset, duration);\n               move(myRect3, offset, 0, duration);\n     }\n     \n     if(i % 2 == 0) {\n             move(myRect2, 2*offset, 2*offset, duration);\n     }\n }\n \n loop(int j from 1 .. 10 ) {\n     paral{\n               move(myRect1, 0, -offset, duration);\n               move(myRect3, -offset, 0, duration);\n     }\n     paral{\n         move(myRect1, -offset, 0, duration);\n         move(myRect3, 0, -offset, duration);\n     }\n     \n     if(j % 2 == 0) {\n             move(myRect2, 2* (-offset), 2* (-offset), duration); \n     }\n }",
    "Comment": "",
    "exceptionType": ""
  }
  
]